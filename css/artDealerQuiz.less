////////////
// Colors //
////////////
@grey: #888;
@blue: #14a1e3;
@orange: #e35614;
// @yellow: #e38a14;

////////////
// Mixins //
////////////
.bordered(@top: 1px; @right: 1px; @bottom: 1px; @left: 1px; @color: transparent) {
  border-top: @top solid @color;
  border-right: @right solid @color;
  border-bottom: @bottom solid @color;
  border-left: @left solid @color;
}

// Хитрый трюк увиден здесь: http://stackoverflow.com/questions/14735569/css-double-border-2-colors-without-using-outline.
.double-bordered(@top: 1px; @right: 1px; @bottom: 1px; @left: 1px; @color1: transparent; @color2: transparent) {
  
  .bordered(@top, @right, @bottom, @left, @color1);

  &:before 
  {
      content: "";
      display:block;
      position:absolute;
      z-index:-1;
      top: -4px;
      right: -4px;
      bottom: -4px;
      left: -4px;
      .bordered(@top, @right, @bottom, @left, @color2);
  }
}

// Flexbox
.flexbox() {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
    -ms-flex-direction: @direction;
        flex-direction: @direction;
}

.flex-wrap(@wrap: nowrap) {
  -webkit-flex-wrap: @wrap;
      -ms-flex-wrap: @wrap;
          flex-wrap: @wrap;
}

.justify-content(@justification: space-between) {
  -webkit-justify-content: @justification;
          justify-content: @justification;
            -ms-flex-pack: @justification;

}

.align-items(@align) {
  -webkit-align-items: center;
       -ms-flex-align: center;
          align-items: center;
}

.flex-grow(@size) {
  -webkit-flex-grow: @size;
  -ms-flex-positive: @size;
          flex-grow: @size;
}

.align-self(@align) {
  -webkit-align-self: @align;
 -ms-flex-item-align: @align;
          align-self: @align;
}

// Other
.backface-visibility(@vis: hidden) {
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
      -ms-backface-visibility: hidden;
       -o-backface-visibility: hidden;
          backface-visibility: hidden;
}

///////////////
// Main part //
///////////////

// div {
//   .bordered(1px, 1px, 1px, 1px,  red);
// }

body {
  position: relative;
  margin: 0;
  font-family: 'PT Serif', Verdana, Geneva, sans-serif;
}

h1, h2, h3 {
  font-family: 'PT Serif Caption', Verdana, Geneva, sans-serif;
  font-weight: normal;
}

.main-wrapper {
  width: 100%;
  position: relative;
  margin: 0;
  padding: 0;
}

.main-content {
  
}

.central-elem {
  &.central-mark {
    color: @blue;

    padding: 1em;
    border: 3px solid @blue;
    border-radius: 50%;
    width: 5vh;
    height: 5vh;

    &:before {
      content: '?';
      font-size: 2em;
      font-family: Verdana, Geneva, sans-serif;
    }
  }
}

.art {
    position: relative;
    
    width: 100%;
    .bordered(2px, 2px, 2px, 2px);

    line-height: 0;


    transition: all 1s ease;

    

    .info {
      line-height: 1em;
      padding: 1em;
      

      h1 {
        margin-top: 0;
      }
    }
  }

@media (max-width: 767px) {
  .main-content {
    width: 100%;
    padding: 0;
    margin: 0;
    border: none;
  }

  .central-elem {
    &.img-container {
      width: 90%;
    }

  }

  .art {

    .image {
      width: 100%;
    }

    
  }
}

@media (min-width: 768px) {
  .main-content {
    position: relative;
    margin: 0 auto;

    width: 90%;
    padding: 2vh 5%;

    .flexbox;
    .flex-direction;
    .flex-wrap;
    .justify-content;
    -ms-flex-pack: justify;
    .align-items(center);
  }

  .central-elem {
    .flexbox;
    .justify-content(center);
    .align-items(center);
    
    perspective: 800px;

    &.img-container {

      width: 304px;
    }
    
    &:hover {
      .art {
        transform: rotateY(-180deg);
        .bordered(2px, 2px, 2px, 2px, @grey);

      }
    }
  }

  .art {
    // Сохранение трёхмерности для потомков дочерних элементов.
    transform-style: preserve-3d;

    &:focus {
      .double-bordered(2px, 2px, 2px, 2px, white, @orange);
      outline: none;

      .info {
        position: relative;
        transform: none;
        // Transition игнорирует height: auto и поэтому мне здесь пришлось использовать
        // max-height. Найдено здесь: http://stackoverflow.com/questions/13938460/css-transition-auto-height-not-working
        max-height: 300px;
        overflow: hidden;
      }

      &:hover {
        transform: none;
        .bordered(2px, 2px, 2px, 2px, yellow);
      }
    }

    > * {
      .backface-visibility;
    }
  
    .image {
      width: 300px;
    }

    .info {
      position: absolute;
      top: 0;
      left: 0;
      max-height: 0;
      overflow: visible;
      transition: max-height 1.5s ease;
      transform: rotateY(-180deg );

      &.centred {
        right: 0;
        bottom: 0;
        margin: auto;
      }
    }
  }
}

@media (min-width: 992px) {
  .main-content {
    max-width: 975px;
  }
  .central-elem {
    &.img-container {

      width: 404px;
    }
  }

  .art {

    .image {
      width: 400px;
    }

    
  }
}

@media (min-width: 1200px) {

}